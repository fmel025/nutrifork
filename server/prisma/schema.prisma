// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName       String
  username       String
  email          String
  password       String
  deleted        Boolean  @default(false)
  avatar         String?
  avatarPublicId String?
  allergies       String[]
  preferences    String[]
  rating         Rating[]
  favoriteIDs    String[] @db.ObjectId
  favorites      Recipe[] @relation(fields: [favoriteIDs], references: [id])
}

// TODO: Update this one
model Recipe {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  image        String
  instructions String[]
  ingredients  String[]
  categories   String[]
  rating       Rating[]
  userIDs      String[] @db.ObjectId
  users        User[]   @relation(fields: [userIDs], references: [id])
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
}

model Allergy {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
}

model Rating {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String @db.ObjectId
  user     User   @relation(fields: [userId], references: [id])
  userId   String @db.ObjectId
  rating   Float
}
